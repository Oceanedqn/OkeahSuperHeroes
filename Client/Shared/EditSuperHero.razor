@inject ISuperHeroService SuperHeroService

@if(Hero.Id == 0)
{

    <h3>Create a new Hero</h3>
}
else
{

    <h3> Edit : @Hero.HeroName</h3>
}



<EditForm Model="Hero" OnSubmit="HandleSubmit">
    <div class="form-group">
        <label>First Name</label>
    <InputText @bind-Value="Hero.FirstName" class="form-control"></InputText>

    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="Hero.LastName" class="form-control"></InputText>

    </div>
    <div class="form-group">
        <label>Hero Name</label>
        <InputText @bind-Value="Hero.HeroName" class="form-control"></InputText>

    </div>
    <div class="form-group">
        <label >Comic</label><br/>
        <InputRadioGroup  @bind-Value="comicId" class="form-control">
            @foreach (var comic in SuperHeroService.Comics)
                    {
                        <InputRadio Value="@comic.Id"/><span >@comic.Name</span><br />
                    }
        </InputRadioGroup>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>


@code {
    [Parameter]
    public Okeah.Shared.SuperHero Hero { get; set; } = new Okeah.Shared.SuperHero();
    int comicId = 1;

    protected override async Task OnParametersSetAsync()
    {
        await SuperHeroService.GetComics();
        comicId = Hero.ComicId;
    }

    async void HandleSubmit()
    {
        Hero.Comic = null;
        Hero.ComicId = comicId;

        if (Hero.Id == 0)
        {

            await SuperHeroService.CreateSuperHero(Hero);
        }
        else
        {

            await SuperHeroService.UpdateSuperHero(Hero, Hero.Id);
        }

    }

}
